digraph "ICFG" {
	label="ICFG";

	Node0x558885094ca0 [shape=record,color=purple,label="{GlobalICFGNode0\nCopyStmt: [Var1 \<-- Var0]  \n i8* null \{ constant data \}\nAddrStmt: [Var6 \<-- Var3]  \n i32 0 \{ constant data \}\nAddrStmt: [Var33 \<-- Var3]  \n i32 1 \{ constant data \}\nAddrStmt: [Var11 \<-- Var3]  \n @.str.3 = private unnamed_addr constant [11 x i8] c\"ALLOC_ARG0\\00\", section \"llvm.metadata\" \{ Glob  \}\nAddrStmt: [Var15 \<-- Var3]  \n @.str.5 = private unnamed_addr constant [11 x i8] c\"ALLOC_ARG2\\00\", section \"llvm.metadata\" \{ Glob  \}\nAddrStmt: [Var17 \<-- Var3]  \n @.str.6 = private unnamed_addr constant [7 x i8] c\"MEMCPY\\00\", section \"llvm.metadata\" \{ Glob  \}\nAddrStmt: [Var19 \<-- Var3]  \n @.str.7 = private unnamed_addr constant [7 x i8] c\"MEMSET\\00\", section \"llvm.metadata\" \{ Glob  \}\nAddrStmt: [Var21 \<-- Var3]  \n @.str.8 = private unnamed_addr constant [10 x i8] c\"OVERWRITE\\00\", section \"llvm.metadata\" \{ Glob  \}\nAddrStmt: [Var13 \<-- Var3]  \n @.str.4 = private unnamed_addr constant [11 x i8] c\"ALLOC_ARG1\\00\", section \"llvm.metadata\" \{ Glob  \}\nAddrStmt: [Var7 \<-- Var3]  \n @.str.1 = private unnamed_addr constant [48 x i8] c\"/home/runner/work/SVF/SVF/svf-llvm/lib/extapi.c\\00\", section \"llvm.metadata\" \{ Glob  \}\nAddrStmt: [Var9 \<-- Var3]  \n @.str.2 = private unnamed_addr constant [12 x i8] c\"REALLOC_RET\\00\", section \"llvm.metadata\" \{ Glob  \}\nAddrStmt: [Var4 \<-- Var3]  \n @.str = private unnamed_addr constant [10 x i8] c\"ALLOC_RET\\00\", section \"llvm.metadata\" \{ Glob  \}\nAddrStmt: [Var62 \<-- Var3]  \n i32 4 \{ constant data \}\nAddrStmt: [Var26 \<-- Var3]  \n i32 18 \{ constant data \}\nAddrStmt: [Var68 \<-- Var3]  \n i32 -1 \{ constant data \}\nAddrStmt: [Var23 \<-- Var27]  \n @llvm.global.annotations = appending global [1 x \{ i8*, i8*, i8*, i32, i8* \}] [\{ i8*, i8*, i8*, i32, i8* \} \{ i8* bitcast (i8* (i64)* @malloc to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 18, i8* null \}], section \"llvm.metadata\" \{ Glob  \}\nCopyStmt: [Var24 \<-- Var25]  \n i8* bitcast (i8* (i64)* @malloc to i8*) \{ N/A \}\nGepStmt: [Var82 \<-- Var23]  \n @llvm.global.annotations = appending global [1 x \{ i8*, i8*, i8*, i32, i8* \}] [\{ i8*, i8*, i8*, i32, i8* \} \{ i8* bitcast (i8* (i64)* @malloc to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 18, i8* null \}], section \"llvm.metadata\" \{ Glob  \}\nStoreStmt: [Var82 \<-- Var24]  \n i8* bitcast (i8* (i64)* @malloc to i8*) \{ N/A \}\nGepStmt: [Var5 \<-- Var4]  \n i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0) \{ N/A \}\nGepStmt: [Var83 \<-- Var23]  \n @llvm.global.annotations = appending global [1 x \{ i8*, i8*, i8*, i32, i8* \}] [\{ i8*, i8*, i8*, i32, i8* \} \{ i8* bitcast (i8* (i64)* @malloc to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 18, i8* null \}], section \"llvm.metadata\" \{ Glob  \}\nStoreStmt: [Var83 \<-- Var5]  \n i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0) \{ N/A \}\nGepStmt: [Var8 \<-- Var7]  \n i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0) \{ N/A \}\nGepStmt: [Var84 \<-- Var23]  \n @llvm.global.annotations = appending global [1 x \{ i8*, i8*, i8*, i32, i8* \}] [\{ i8*, i8*, i8*, i32, i8* \} \{ i8* bitcast (i8* (i64)* @malloc to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 18, i8* null \}], section \"llvm.metadata\" \{ Glob  \}\nStoreStmt: [Var84 \<-- Var8]  \n i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0) \{ N/A \}\nGepStmt: [Var85 \<-- Var23]  \n @llvm.global.annotations = appending global [1 x \{ i8*, i8*, i8*, i32, i8* \}] [\{ i8*, i8*, i8*, i32, i8* \} \{ i8* bitcast (i8* (i64)* @malloc to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 18, i8* null \}], section \"llvm.metadata\" \{ Glob  \}\nStoreStmt: [Var85 \<-- Var26]  \n i32 18 \{ constant data \}\nGepStmt: [Var86 \<-- Var23]  \n @llvm.global.annotations = appending global [1 x \{ i8*, i8*, i8*, i32, i8* \}] [\{ i8*, i8*, i8*, i32, i8* \} \{ i8* bitcast (i8* (i64)* @malloc to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i32 0, i32 0), i32 18, i8* null \}], section \"llvm.metadata\" \{ Glob  \}\nStoreStmt: [Var86 \<-- Var0]  \n i8* null \{ constant data \}\nAddrStmt: [Var25 \<-- Var28]  \nFunction: malloc \nAddrStmt: [Var36 \<-- Var37]  \nFunction: main \nAddrStmt: [Var43 \<-- Var44]  \nFunction: src \nAddrStmt: [Var72 \<-- Var73]  \nFunction: sink }"];
	Node0x558885094ca0 -> Node0x5588850a59d0[style=solid];
	Node0x5588850a59d0 [shape=record,color=yellow,label="{FunEntryICFGNode1 \{fun: main\}}"];
	Node0x5588850a59d0 -> Node0x5588850e2780[style=solid];
	Node0x5588850e2780 [shape=record,color=black,label="{IntraICFGNode2 \{fun: main\}\nAddrStmt: [Var39 \<-- Var40]  \n   %1 = alloca i32, align 4 }"];
	Node0x5588850e2780 -> Node0x5588850d76d0[style=solid];
	Node0x5588850d76d0 [shape=record,color=black,label="{IntraICFGNode3 \{fun: main\}\nStoreStmt: [Var39 \<-- Var6]  \n   store i32 0, i32* %1, align 4 }"];
	Node0x5588850d76d0 -> Node0x5588850727d0[style=solid];
	Node0x5588850727d0 [shape=record,color=red,label="{CallICFGNode4 \{fun: main\}\nCallPE: [Var47 \<-- Var33]  \n   call void @src(i32 noundef 1) |{<s0>0x5588850ca680}}"];
	Node0x5588850727d0:s0 -> Node0x558885074040[style=solid,color=red];
	Node0x558885099ca0 [shape=record,color=blue,label="{RetICFGNode5 \{fun: main\}}"];
	Node0x558885099ca0 -> Node0x5588850dac90[style=solid];
	Node0x558885074040 [shape=record,color=yellow,label="{FunEntryICFGNode6 \{fun: src\}}"];
	Node0x558885074040 -> Node0x5588850dfbd0[style=solid];
	Node0x5588850d3db0 [shape=record,color=green,label="{FunExitICFGNode7 \{fun: src\}|{<s0>0x5588850ca680|<s1>0x558885097fa0|<s2>0x55888509e670}}"];
	Node0x5588850d3db0:s0 -> Node0x558885099ca0[style=solid,color=blue];
	Node0x5588850d3db0:s1 -> Node0x5588850712e0[style=solid,color=blue];
	Node0x5588850d3db0:s2 -> Node0x558885061680[style=solid,color=blue];
	Node0x5588850dac90 [shape=record,color=black,label="{IntraICFGNode8 \{fun: main\}\n   ret i32 0 }"];
	Node0x5588850dac90 -> Node0x5588850de1b0[style=solid];
	Node0x5588850de1b0 [shape=record,color=green,label="{FunExitICFGNode9 \{fun: main\}\nPhiStmt: [Var38 \<-- ([Var6, ICFGNode8],)]  \n   ret i32 0 }"];
	Node0x5588850dfbd0 [shape=record,color=black,label="{IntraICFGNode10 \{fun: src\}\nAddrStmt: [Var48 \<-- Var49]  \n   %2 = alloca i32, align 4 }"];
	Node0x5588850dfbd0 -> Node0x5588850e2de0[style=solid];
	Node0x5588850e2de0 [shape=record,color=black,label="{IntraICFGNode11 \{fun: src\}\nAddrStmt: [Var50 \<-- Var51]  \n   %3 = alloca i32, align 4 }"];
	Node0x5588850e2de0 -> Node0x5588850e3990[style=solid];
	Node0x5588850e3990 [shape=record,color=black,label="{IntraICFGNode12 \{fun: src\}\nStoreStmt: [Var48 \<-- Var47]  \n   store i32 %0, i32* %2, align 4 }"];
	Node0x5588850e3990 -> Node0x5588850e4410[style=solid];
	Node0x5588850e4410 [shape=record,color=black,label="{IntraICFGNode13 \{fun: src\}\nStoreStmt: [Var50 \<-- Var6]  \n   store i32 0, i32* %3, align 4 }"];
	Node0x5588850e4410 -> Node0x5588850e5d30[style=solid];
	Node0x5588850e5d30 [shape=record,color=black,label="{IntraICFGNode14 \{fun: src\}\nLoadStmt: [Var54 \<-- Var48]  \n   %4 = load i32, i32* %2, align 4 }"];
	Node0x5588850e5d30 -> Node0x5588850e7c00[style=solid];
	Node0x5588850e7c00 [shape=record,color=black,label="{IntraICFGNode15 \{fun: src\}\nCmpStmt: [Var55 \<-- (Var54 predicate39 Var33)]  \n   %5 = icmp sge i32 %4, 1 }"];
	Node0x5588850e7c00 -> Node0x5588850d4740[style=solid];
	Node0x5588850d4740 [shape=record,color=black,label="{IntraICFGNode16 \{fun: src\}\nBranchStmt: [Condition Var55]\nSuccessor 0 ICFGNode17   Successor 1 ICFGNode19   \n   br i1 %5, label %6, label %7 }"];
	Node0x5588850d4740 -> Node0x5588850dc9c0[style=solid];
	Node0x5588850d4740 -> Node0x5588850e5e30[style=solid];
	Node0x5588850dc9c0 [shape=record,color=red,label="{CallICFGNode17 \{fun: src\}\nCallPE: [Var47 \<-- Var6]  \n   call void @src(i32 noundef 0) |{<s0>0x558885097fa0}}"];
	Node0x5588850dc9c0:s0 -> Node0x558885074040[style=solid,color=red];
	Node0x5588850712e0 [shape=record,color=blue,label="{RetICFGNode18 \{fun: src\}}"];
	Node0x5588850712e0 -> Node0x558885071770[style=solid];
	Node0x5588850e5e30 [shape=record,color=black,label="{IntraICFGNode19 \{fun: src\}\nLoadStmt: [Var60 \<-- Var48]  \n   %8 = load i32, i32* %2, align 4 }"];
	Node0x5588850e5e30 -> Node0x5588850e48b0[style=solid];
	Node0x558885071770 [shape=record,color=black,label="{IntraICFGNode20 \{fun: src\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode22   \n   br label %15 }"];
	Node0x558885071770 -> Node0x558885094760[style=solid];
	Node0x5588850e48b0 [shape=record,color=black,label="{IntraICFGNode21 \{fun: src\}\nCmpStmt: [Var61 \<-- (Var60 predicate32 Var62)]  \n   %9 = icmp eq i32 %8, 4 }"];
	Node0x5588850e48b0 -> Node0x5588850dffd0[style=solid];
	Node0x558885094760 [shape=record,color=black,label="{IntraICFGNode22 \{fun: src\}\n   ret void }"];
	Node0x558885094760 -> Node0x5588850d3db0[style=solid];
	Node0x5588850dffd0 [shape=record,color=black,label="{IntraICFGNode23 \{fun: src\}\nBranchStmt: [Condition Var61]\nSuccessor 0 ICFGNode24   Successor 1 ICFGNode25   \n   br i1 %9, label %10, label %13 }"];
	Node0x5588850dffd0 -> Node0x5588850d8920[style=solid];
	Node0x5588850dffd0 -> Node0x5588850db7f0[style=solid];
	Node0x5588850d8920 [shape=record,color=black,label="{IntraICFGNode24 \{fun: src\}\nLoadStmt: [Var64 \<-- Var50]  \n   %11 = load i32, i32* %3, align 4 }"];
	Node0x5588850d8920 -> Node0x5588850e1f90[style=solid];
	Node0x5588850db7f0 [shape=record,color=red,label="{CallICFGNode25 \{fun: src\}|{<s0>0x5588850997d0}}"];
	Node0x5588850db7f0:s0 -> Node0x5588850671b0[style=solid,color=red];
	Node0x55888506fb00 [shape=record,color=blue,label="{RetICFGNode26 \{fun: src\}}"];
	Node0x55888506fb00 -> Node0x5588850dbbf0[style=solid];
	Node0x5588850671b0 [shape=record,color=yellow,label="{FunEntryICFGNode27 \{fun: sink\}}"];
	Node0x5588850671b0 -> Node0x5588850dbad0[style=solid];
	Node0x5588850dc760 [shape=record,color=green,label="{FunExitICFGNode28 \{fun: sink\}|{<s0>0x5588850997d0}}"];
	Node0x5588850dc760:s0 -> Node0x55888506fb00[style=solid,color=blue];
	Node0x5588850e1f90 [shape=record,color=black,label="{IntraICFGNode29 \{fun: src\}\nBinaryOPStmt: [Var65 \<-- (Var64 opcode13 Var33)]  \n   %12 = add nsw i32 %11, 1 }"];
	Node0x5588850e1f90 -> Node0x5588850d55c0[style=solid];
	Node0x5588850dbbf0 [shape=record,color=black,label="{IntraICFGNode30 \{fun: src\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode32   \n   br label %14 }"];
	Node0x5588850dbbf0 -> Node0x55888509f140[style=solid];
	Node0x5588850d55c0 [shape=record,color=black,label="{IntraICFGNode31 \{fun: src\}\nStoreStmt: [Var50 \<-- Var65]  \n   store i32 %12, i32* %3, align 4 }"];
	Node0x5588850d55c0 -> Node0x5588850d9550[style=solid];
	Node0x55888509f140 [shape=record,color=black,label="{IntraICFGNode32 \{fun: src\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode22   \n   br label %15 }"];
	Node0x55888509f140 -> Node0x558885094760[style=solid];
	Node0x5588850d9550 [shape=record,color=red,label="{CallICFGNode33 \{fun: src\}\nCallPE: [Var47 \<-- Var68]  \n   call void @src(i32 noundef -1) |{<s0>0x55888509e670}}"];
	Node0x5588850d9550:s0 -> Node0x558885074040[style=solid,color=red];
	Node0x558885061680 [shape=record,color=blue,label="{RetICFGNode34 \{fun: src\}}"];
	Node0x558885061680 -> Node0x5588850d9da0[style=solid];
	Node0x5588850d9da0 [shape=record,color=black,label="{IntraICFGNode35 \{fun: src\}\nBranchStmt: [ Unconditional branch]\nSuccessor 0 ICFGNode32   \n   br label %14 }"];
	Node0x5588850d9da0 -> Node0x55888509f140[style=solid];
	Node0x5588850dbad0 [shape=record,color=black,label="{IntraICFGNode36 \{fun: sink\}\nAddrStmt: [Var78 \<-- Var79]  \n   %1 = alloca i32, align 4 }"];
	Node0x5588850dbad0 -> Node0x5588850e1e20[style=solid];
	Node0x5588850e1e20 [shape=record,color=black,label="{IntraICFGNode37 \{fun: sink\}\nStoreStmt: [Var78 \<-- Var6]  \n   store i32 0, i32* %1, align 4 }"];
	Node0x5588850e1e20 -> Node0x5588850e6620[style=solid];
	Node0x5588850e6620 [shape=record,color=black,label="{IntraICFGNode38 \{fun: sink\}\n   ret void }"];
	Node0x5588850e6620 -> Node0x5588850dc760[style=solid];
	Node0x558885084200 [shape=record,color=green,label="{FunExitICFGNode39 \{fun: malloc\}\nPhiStmt: [Var29 \<-- ([Var0, ICFGNode43],)]  \n   ret i8* null }"];
	Node0x558885086c70 [shape=record,color=yellow,label="{FunEntryICFGNode40 \{fun: malloc\}}"];
	Node0x55888508a190 [shape=record,color=black,label="{IntraICFGNode41 \{fun: malloc\}\nAddrStmt: [Var31 \<-- Var32]  \n   %size.addr = alloca i64, align 8 }"];
	Node0x558885089cd0 [shape=record,color=black,label="{IntraICFGNode42 \{fun: malloc\}\nStoreStmt: [Var31 \<-- Var30]  \n   store i64 %size, i64* %size.addr, align 8 }"];
	Node0x558885089430 [shape=record,color=black,label="{IntraICFGNode43 \{fun: malloc\}\n   ret i8* null }"];
}
